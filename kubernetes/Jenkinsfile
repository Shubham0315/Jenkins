pipeline {
	agent any
	
	environment {
		DOCKERHUB_CREDENTIALS = credentials('dockerhub-creds')
		DOCKER_IMAGE = 'shubham0315/nginx'
		IMAGE_TAG = "${env.BUILD_NUMBER}"
		AWS_REGION = 'us-east-1'
		EKS_CLUSTER_NAME = 'shubham-eks'
		K8S_DEPLOYMENT = 'shubham-deployment'
		K8S_NAMESPACE = 'default'
	}
	
	
	stages {
		stage('Checkout') {
			steps {
				checkout scm
			}
		}
		stage('Build docker image'){
			steps {
				sh """
					docker build -t ${DOCKER_IMAGE}:${IMAGE_TAG} .
					docker tag ${DOCKER_IMAGE}:${IMAGE_TAG} ${}:latest
				"""
			}
		}
		
		stage('Login to dockerhub'){
			steps {
				sh """
					echo "${DOCKERHUB_CREDENTIALS_PASS}" | docker login -u "${DOCKERHUB_CREDENTIALS_USER}" --password-stdin
			}	"""
		}
		
		stage('Push Image'){
			steps {
				sh """
					docker push ${DOCKERHUB_IMAGE}:${IMAGE_TAG}
					docker push ${DOCKER_IMAGE}:latest
			}
		}
		
		stage('Configure kubectl for eks'){
			steps {
				sh """
					aws eks --region ${AWS_REGION} update-kubeconfig --name ${EKS_CLUSTER_NAME}
				"""
			}
		}
		
		stage('Deploy to EKS'){
			steps {
				sh """
					kubectl set image deployment/${K8S_DEPLOYMENT} \
					${K8S_DEPLOYMENT}=${DOCKER_IMAGE}:${IMAGE_TAG} \
					--namespace=${K8S_NAMESPACE}
					
					kubectl rollout status deployment/${K8S_DEPLOYMENT} --namespace=${K8S_NAMESPACE}
				"""
			}
		}
	}
}
